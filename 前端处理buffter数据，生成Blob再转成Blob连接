<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<title>36种漂亮的CSS3网页按钮Button样式</title>
<style type="text/css">


</style>
</head>
<body>

        <video class="video" src="" width="600" height="500" controls>

            您的浏览器不支持 video 标签。
        </video>
        <script>
            'use strict'
            window.onload = function (evt) {
                // 获取元素
                let video = document.querySelector('.video')
                const xhr = new XMLHttpRequest()
                xhr.open('post', '/b', true)
                // 请求类型 bufffer，这个很关键，他会把你返回的数据生成arraybuffer（类型化数组）
                xhr.responseType = 'arraybuffer'
                xhr.onload = function () {
                    if (xhr.status === 200 || xhr.status === 304) {
                        // 将后台 buffer 转换为 blob
                        /*注意后台buffer被new Int8Array（buffer）处理返回为类型化数组（Uint8Array（buffer）也是返回类型化数组）
                          也就是 new Int8Array（后台buffer数据）后为 xhr.response
                        */
                        let blob = new Blob([xhr.response], { type: 'video/*' })  //new Blob(["typedArray--->类型化数组"], {type:"xxxx"});
                        // 创建blob链接
                        video.src = URL.createObjectURL(blob); //每次创建生成都不一样 URL.revokeObjectURL(blob连接)  blob:https://localhost/86ba5a54-673d-426b-99fe-984e1e49428c
                        console.log(blob)  
                        
                        /*Blob(318465) {size: 318465, type: "video"}
                           size: 318465
                           type: "video"
                          __proto__: Blob*/
                          
                    }
                }
                xhr.send()
            }

        </script>
</body>
</html>


后台：
  b(req,res){
      fs.readFile(__dirname + '../../../1.mp4', function (err, data) {  //data为buffter数据
          if (err) {
              console.log(err.stack);
              return;
          }
          res.write(data); res.end();
      })

  }
  
  
 
 
 file 和 blob对象数据 都可以被 URL.createObjectURL( file || Blob ) 创建成url格式链接;
 
<!DOCTYPE HTML>
<html>
<head>
    <meta charset="UTF-8">
    <title>36种漂亮的CSS3网页按钮Button样式</title>
    <style type="text/css">
    </style>
</head>
<body>

    <video class="video" src="" width="600" height="500" controls>

        您的浏览器不支持 video 标签。
    </video>
    <input type="file" id="file" />
    <img src="" id="img" />
    <script>
        'use strict'
        window.onload = function (evt) {
            // 获取元素
            let video = document.querySelector('.video')
            const xhr = new XMLHttpRequest()
            xhr.open('post', '/b', true)
            // 请求类型 bufffer
            xhr.responseType = 'arraybuffer'
            xhr.onload = function () {
                if (xhr.status === 200 || xhr.status === 304) {
                    // 将后台 buffer 转换为 blob

                    let blob = new Blob([xhr.response], { type: 'video/*' })
                    // 创建blob链接
                    var file = document.getElementById('file');
                    file.onchange = function () {

                        document.getElementById('img').src = URL.createObjectURL(this.files[0]);
                    }
                    video.src = URL.createObjectURL(blob); //每次创建生成都不一样 URL.revokeObjectURL(blob连接)
                    console.log(blob)
                    var reader = new FileReader();
                    reader.addEventListener("loadend", function () {
                        // reader.result 包含转化为类型数组的blob
                        console.log(reader.result)
                    });
                    reader.readAsArrayBuffer(blob);
                }
            }
            xhr.send()
        }

    </script>
</body>
</html>
  
  
